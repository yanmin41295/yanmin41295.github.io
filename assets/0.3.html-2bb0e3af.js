const n=JSON.parse('{"key":"v-240741b9","path":"/labuladong/0.3.html","title":"双指针巧杀七到链表","lang":"zh-CN","frontmatter":{"title":"双指针巧杀七到链表","icon":"edit","date":"2023-03-17T00:00:00.000Z","category":["算法"],"tag":["算法","labuladong"],"description":"合并两个有序链表 class ListNode { int val; ListNode next; } class Solution { ListNode mergeTwoLists(ListNode l1, ListNode l2) { ListNode head = new ListNode(); ListNode node = head; ListNode p1 = l1; ListNode p2 = l2; while (p1 != null &amp;&amp; p2 != null) { if (p1.val &lt; p2.val) { node.next = p1; p1 = p1.next; } else { node.next = p2; p2 = p2.next; } node = node.next; } if (p1 != null) { node.next = p1; } if (p2 != null) { node.next = p2; } return head.next; } }","head":[["meta",{"property":"og:url","content":"https://yanmin41295.github.io/labuladong/0.3.html"}],["meta",{"property":"og:title","content":"双指针巧杀七到链表"}],["meta",{"property":"og:description","content":"合并两个有序链表 class ListNode { int val; ListNode next; } class Solution { ListNode mergeTwoLists(ListNode l1, ListNode l2) { ListNode head = new ListNode(); ListNode node = head; ListNode p1 = l1; ListNode p2 = l2; while (p1 != null &amp;&amp; p2 != null) { if (p1.val &lt; p2.val) { node.next = p1; p1 = p1.next; } else { node.next = p2; p2 = p2.next; } node = node.next; } if (p1 != null) { node.next = p1; } if (p2 != null) { node.next = p2; } return head.next; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-02T08:39:30.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"labuladong"}],["meta",{"property":"article:published_time","content":"2023-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-02T08:39:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双指针巧杀七到链表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-02T08:39:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"合并两个有序链表","slug":"合并两个有序链表","link":"#合并两个有序链表","children":[]}],"git":{"createdTime":1680424770000,"updatedTime":1680424770000,"contributors":[{"name":"yanmin41295","email":"80966418+yanmin41295@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"labuladong/0.3.md","localizedDate":"2023年3月17日","excerpt":"<h2> 合并两个有序链表</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ListNode</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> val<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">ListNode</span> next<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">ListNode</span> <span class=\\"token function\\">mergeTwoLists</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ListNode</span> l1<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ListNode</span> l2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">ListNode</span> head <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ListNode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">ListNode</span> node <span class=\\"token operator\\">=</span> head<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">ListNode</span> p1 <span class=\\"token operator\\">=</span> l1<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">ListNode</span> p2 <span class=\\"token operator\\">=</span> l2<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>p1 <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">&amp;&amp;</span> p2 <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">.</span>val <span class=\\"token operator\\">&lt;</span> p2<span class=\\"token punctuation\\">.</span>val<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                node<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> p1<span class=\\"token punctuation\\">;</span>\\n                p1 <span class=\\"token operator\\">=</span> p1<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                node<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> p2<span class=\\"token punctuation\\">;</span>\\n                p2 <span class=\\"token operator\\">=</span> p2<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            node <span class=\\"token operator\\">=</span> node<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>p1 <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            node<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> p1<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>p2 <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            node<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> p2<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> head<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
